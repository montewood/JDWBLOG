[{"name":"app.R","content":"library(shiny)\nlibrary(bslib)\nlibrary(bsicons)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(purrr)\nlibrary(glue)\nlibrary(ggplot2)\nlibrary(shinycssloaders)\nlibrary(shinyjs)\n\nui <- fluidPage(\n  useShinyjs(),  # 🔹 shinyjs 활성화\n  titlePanel(HTML(\"<b>About This blog<\/b>\")),\n  \n  # 🔹 설정 아이콘을 화면 우상단에 고정\n  absolutePanel(\n    top = 10, right = 20, fixed = TRUE, \n    actionButton(\"settings_btn\", label = bsicons::bs_icon(\"gear\"), \n                 style = \"font-size: 64px; background: none; border: none; cursor: pointer; color: #555;\")\n    \n  ),\n  \n  # 메인 레이아웃\n  fluidRow(\n    column(12,\n           card(\n             height = \"80vh\",\n             withSpinner(\n               plotOutput(\"visit_plot\", height = \"100%\", width = \"100%\"), \n               type = 3, \n               color = \"#F5F5F5\", \n               color.background = \"#F5F5F5\"\n             )\n           )\n    ),\n    column(12,\n           value_box(\n             title = \"총 방문자 수\", \n             value = uiOutput(\"row_count_ui\"),\n             showcase = bsicons::bs_icon(\"people-fill\"), \n             theme = \"custom\",\n             style = \"background-color: #A67B5B; color: white;\",\n             height = \"20vh\"\n           )\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  # 설정 버튼 클릭 시 팝업 UI 표시\n  observeEvent(input$settings_btn, {\n    showModal(modalDialog(\n      title = h2(HTML(\"<b>방문자 수<\/b>\")),\n      dateRangeInput(\"date_range\", \"조회 기간 설정\", \n                     start = \"2024-01-01\", \n                     end = \"2024-02-28\"),\n      easyClose = TRUE,\n      footer = tagList(\n        modalButton(\"취소\"),\n        actionButton(\"apply_settings\", \"적용\")\n      )\n    ))\n  })\n  \n  # \"적용\" 버튼 클릭 시 팝업 닫기\n  observeEvent(input$apply_settings, {\n    removeModal()\n  })\n  \n  # 데이터 로딩 상태 관리\n  data_reactive <- reactiveVal(NULL)\n  loading_state <- reactiveVal(FALSE)\n  \n  # 🔹 \"방문자 수 조회\" 버튼 클릭 시 데이터 로딩 (팝업 \"적용\" 버튼도 트리거)\n  observeEvent({ input$visit_btn; input$apply_settings }, {\n    req(input$date_range)\n    \n    loading_state(TRUE)\n    showNotification(\"Loading Data...\", type = \"message\", duration = 3)\n    \n    # 선택한 날짜 범위의 데이터를 로드\n    date_seq <- seq(from = input$date_range[1], to = input$date_range[2], by = \"1 days\")\n    \n    result_data <- map_df(date_seq, function(selected_date) {\n      selected_date_string <- format(selected_date, \"%Y%m%d\")\n      url <- paste0(\"https://raw.githubusercontent.com/montewood/gh-action/refs/heads/main/output/GA-\", \n                    selected_date_string, \".json\")\n      \n      tryCatch({\n        fromJSON(url) %>% fromJSON() %>% as_tibble()\n      }, error = function(e) {\n        NULL\n      })\n    })\n    \n    data_reactive(result_data)\n    loading_state(FALSE)\n    showNotification(\"Data Loading Complete\", type = \"message\", duration = 2)\n  })\n  \n  # 총 방문자 수 UI 출력\n  output$row_count_ui <- renderUI({\n    if (loading_state()) {\n      span(\"Loading...\", style = \"font-size: 20px; font-weight: bold; color: gray;\")\n    } else {\n      df <- data_reactive()\n      if (is.null(df) || nrow(df) == 0) {\n        span(\"No Data\", style = \"font-size: 20px; font-weight: bold; color: gray;\")\n      } else {\n        span(paste0(sum(df$activeUsers, na.rm = TRUE), \" 명\"), \n             style = \"font-size: 48px; font-weight: bold; color: black;\")\n      }\n    }\n  })\n  \n  # 방문자 수 변화 차트 출력\n  output$visit_plot <- renderPlot({\n    req(data_reactive())\n    if (loading_state()) return(NULL)\n    \n    df <- data_reactive()\n    \n    par(mar = c(1, 1, 1, 1))\n    \n    agg_df <- df %>% \n      mutate(parsed_year_month = str_sub(parsed_year_month, 1, 7)) %>% \n      group_by(parsed_year_month) %>% \n      summarise(activeUsers = sum(activeUsers, na.rm = TRUE))\n    \n    ggplot(agg_df, aes(x = parsed_year_month, y = activeUsers)) +\n      geom_col() + \n      geom_text(aes(label = activeUsers), vjust = -0.5, color = \"black\") + \n      labs(title = \"JDW BLOG Monthly Visitor Chart\", \n           subtitle = glue(\"{input$date_range[1]} ~ {input$date_range[2]}\"), \n           x = \"Year-Months\", y = \"Total Visitors\") +\n      theme_minimal() +\n      theme(\n        plot.title = element_text(size = 18, face = \"bold\", color = \"black\"),\n        axis.text = element_text(size = 14),\n        axis.title = element_text(size = 16)\n      )\n  }, width = 800, height = 500)\n}\n\nshinyApp(ui, server)\n","type":"text"},{"name":"blog_app.Rproj","content":"Version: 1.0\nProjectId: ca99f1cf-1fa0-45b4-906d-144107c3968c\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
